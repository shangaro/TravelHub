// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using TravelHub.Sql.Data;

namespace TravelHub.Sql.Data.Migrations
{
    [DbContext(typeof(TravelHubContext))]
    [Migration("20171026192622_init2")]
    partial class init2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TravelHub.Models.Airport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AircraftMovements");

                    b.Property<string>("CityCode");

                    b.Property<int?>("CityId");

                    b.Property<string>("CityName");

                    b.Property<string>("Code");

                    b.Property<string>("Country");

                    b.Property<int?>("LocationId");

                    b.Property<string>("Name");

                    b.Property<string>("State");

                    b.Property<string>("Timezone");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("LocationId");

                    b.ToTable("Airports");
                });

            modelBuilder.Entity("TravelHub.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code");

                    b.Property<string>("Country");

                    b.Property<string>("Geonames_Id");

                    b.Property<int>("LocationId");

                    b.Property<string>("Name");

                    b.Property<string>("State");

                    b.Property<string>("Timezone");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("TravelHub.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Latitude");

                    b.Property<decimal>("Longtitude");

                    b.HasKey("Id");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("TravelHub.Models.Airport", b =>
                {
                    b.HasOne("TravelHub.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId");

                    b.HasOne("TravelHub.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");
                });

            modelBuilder.Entity("TravelHub.Models.City", b =>
                {
                    b.HasOne("TravelHub.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
